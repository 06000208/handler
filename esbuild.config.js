/* eslint-disable no-unused-vars */
import console from "node:console";
import { URL } from "node:url";
import process from "node:process";
import { readFileSync } from "node:fs";
import { build } from "esbuild";

// Commented out because this package doesn't currently have any dependencies
// const { dependencies } = JSON.parse(readFileSync(new URL("./package.json", import.meta.url)));

// Commented out because esbuild removed the watch option in favor of context.watch()
// const production = process.argv[2] === "--production";

/**
 * @todo This code needs rewritten to deal with the breaking changes in esbuild's watch mode as well as the new result returned by build()
 */
const esbuildWrapper = async (name, config) => {
    try {
        const { stop, ...alerts } = await build({
            bundle: true,
            // Commented out because this package doesn't currently have any dependencies
            // The browser build shouldn't utilize any code that depends on these
            // external: Object.keys(dependencies),
            // Commented out because esbuild removed the watch option in favor of context.watch()
            // watch: production ? false : {
            //     onRebuild(error, result) {
            //         if (error) {
            //             console.error(`[watch] building ${name} failed:`, error);
            //         } else {
            //             const { stop, ...alerts } = result;
            //             console.log(`[watch] built ${name}:`, alerts);
            //         }
            //     },
            // },
            target: "es2020",
            banner: {
                js: "/* This is a bundled file generated by esbuild\nIf you want to view the source, please visit the github repository */",
            },
            ...config,
        });
        console.log(`built ${name}:`, alerts);
    } catch (error) {
        console.error(`building ${name} failed:`, error);
        process.exit(1);
    }
};

const builds = [
    esbuildWrapper("minified browser esm", {
        entryPoints: ["./src/index.browser.js"],
        minify: true,
        format: "esm",
        platform: "browser",
        outfile: "./dist/index.browser.js",
    }),
    esbuildWrapper("minified node cjs", {
        entryPoints: ["./src/index.cjs.js"],
        minify: true,
        format: "cjs",
        platform: "node",
        outfile: "./dist/index.cjs",
    }),
];

// Commented out because esbuild removed the watch option in favor of context.watch()
// if (!production) {
//     Promise.all(builds).then(() => {
//         console.log("watch mode enabled...");
//     });
// }
